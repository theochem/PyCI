# This workflow is adapted from:
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: PyPI Release
on:
  push:
    tags:
      # Trigger on version tags (e.g., v1.0.0)
      - "v[0-9].[0-9].[0-9]*"
      - "[0-9].[0-9].[0-9]*"
      # Trigger on pre-release tags (e.g., v1.0.0-alpha.1)
      - "v[0-9].[0-9].[0-9]*-*"
      - "[0-9].[0-9].[0-9]*-*"

env:
  # The name of the package to be published to PyPI and TestPyPI.
  PYPI_NAME: qc-PyCI

jobs:
  build:
    name: Build distribution
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        # python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest]
        python-version: ["3.12"]

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   # with:
      #   #   python-version: "3.12"
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # - name: Install system dependencies (Ubuntu)
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y make gcc g++ python3-dev

      # - name: Install system dependencies (macOS)
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew install gcc make

      # - name: Install development and distributions version
      #   run: |
      #     pip install --upgrade pip
      #     pip install -v .
      #     pip install pytest build cibuildwheel

      # - name: Build Source Distribution
      #   run: |
      #     # make
      #     # make test
      #     # python -m build --sdist
      #     cibuildwheel --output-dir dist

      - name: build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.22.0
        # env:
        #   CIBW_SOME_OPTION: value
        #    ...
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install development and distributions version
        run: |
          pip install --upgrade pip
          pip install -v .
          pip install pytest build

      - name: Build Source Distribution
        run: |
          make
          make test
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    # only publish to PyPI on tag pushes
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: PyPI-Release
      url: https://pypi.org/project/${{ env.PYPI_NAME }}
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  github-release:
    name: Sign the Python distribution with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "${{ github.ref_name }}"
          --repo "${{ github.repository }}"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          "${{ github.ref_name }}" dist/**
          --repo "${{ github.repository }}"

  publish-to-testpypi:
    name: Publish Python distribution to TestPyPI
    # if: ${{ github.ref == "refs/heads/master" && github.repository_owner == "theochem" }}
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: TestPyPI
      url: https://test.pypi.org/project/${{ env.PYPI_NAME }}

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
